imports:
    - { resource: 'vendor/symplify/easy-coding-standard/config/psr2.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/php71.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/symplify.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/common.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/clean-code.yml' }

services:
    SlevomatCodingStandard\Sniffs\Functions\UnusedParameterSniff: ~

    Symplify\CodingStandard\Fixer\Php\ClassStringToClassConstantFixer:
        allow_classes:
            - 'SomeClass' # from PHPUnit

    Symplify\CodingStandard\Sniffs\CleanCode\CognitiveComplexitySniff:
        max_cognitive_complexity: 9

    Symplify\CodingStandard\Fixer\Order\MethodOrderByTypeFixer:
        method_order_by_type:
            Rector\Contract\Rector\PhpRectorInterface:
                - 'getDefinition'
                - 'getNodeTypes'
                - 'refactor'

    Symplify\CodingStandard\Sniffs\DependencyInjection\NoClassInstantiationSniff:
        extra_allowed_classes:
            - 'PHPStan\Type\*'
            - 'PHPStan\Analyser\Scope'
            - 'PhpParser\NodeVisitor\NameResolver'
            - 'PhpParser\Node\*'
            - 'PhpParser\Comment'
            - 'PhpParser\Comment\Doc'
            - 'PhpParser\NodeTraverser'
            - 'Rector\Reporting\FileDiff'
            - 'Rector\RectorDefinition\*'
            - 'Rector\Application\Error'
            - 'Rector\DependencyInjection\Loader\*'
            - 'Symplify\PackageBuilder\*'
            - 'Symfony\Component\Console\Input\*Input'

    Symplify\CodingStandard\Fixer\Naming\PropertyNameMatchingTypeFixer:
        extra_skipped_classes:
            - 'PhpParser\PrettyPrinter\Standard'
            - 'PhpParser\Node'

    Symplify\CodingStandard\Sniffs\Naming\ClassNameSuffixByParentSniff:
        extra_parent_types_to_suffixes:
            - 'Rector'
            - 'NodeVisitorAbstract'

parameters:
    exclude_files:
        - '*tests/*Source/*.php'
        # tests files
        - '*tests/*/Fixture/*'
        - '*tests/*/Expected/*'
        - '*packages/ContributorTools/templates/*'

    skip:
        # run manually from time to time, not to bother user with it
        Symplify\CodingStandard\Fixer\Order\PropertyOrderByComplexityFixer: ~
        Symplify\CodingStandard\Fixer\Order\PrivateMethodOrderByUseFixer: ~

        PhpCsFixer\Fixer\Phpdoc\PhpdocTypesFixer:
            - 'packages/Php/src/Rector/Double/RealToFloatTypeCastRector.php'

        Symplify\CodingStandard\Sniffs\CleanCode\ForbiddenReferenceSniff:
            # 3rd party contract
            - 'src/PhpParser/Printer/BetterStandardPrinter.php'

        Symplify\CodingStandard\Fixer\Php\ClassStringToClassConstantFixer:
            # classes might not exist
            - 'bin/bootstrap.php'
            - '*/packages/*/src/Rector/*Rector.php'
            - 'src/Rector/MethodCall/MethodCallToAnotherMethodCallWithArgumentsRector.php'
            - 'src/Rector/Constant/RenameClassConstantsUseToStringsRector.php'
            - '*/packages/NodeTypeResolver/**/PerNodeTypeResolver/**TypeResolver.php'
            - '*/packages/NodeTypeResolver/**/PerNodeTypeResolver/**TypeResolver/*Test.php'
            - '*RectorTest.php'
            - 'src/Rector/AbstractPHPUnitRector.php'
            - 'src/Rector/Class_/ParentClassToTraitsRector.php'
            # required for exact string match with "\"
            - 'packages/NodeTypeResolver/src/Php/AbstractTypeInfo.php'
            # example in description
            - 'src/Rector/Annotation/AnnotationReplacerRector.php'
            - 'packages/NetteToSymfony/src/Event/EventInfosFactory.php'

        Symplify\CodingStandard\Sniffs\CleanCode\ForbiddenStaticFunctionSniff:
            # required by Composer interface
            - 'src/Php/TypeAnalyzer.php'
            # exclusive static config for type support
            - 'src/Php/PhpTypeSupport.php'
            - 'src/Util/*.php'

        Symplify\CodingStandard\Fixer\Naming\PropertyNameMatchingTypeFixer:
            - 'packages/NodeTypeResolver/src/PHPStan/Scope/NodeScopeResolver.php'

        Symplify\CodingStandard\Sniffs\Naming\ClassNameSuffixByParentSniff:
            # hidden API
            - 'src/Rector/AbstractRector.php'

        Symplify\CodingStandard\Sniffs\CleanCode\CognitiveComplexitySniff:
            # tough logic
            - 'packages/CodingStyle/src/Rector/Use_/RemoveUnusedAliasRector.php'
            - 'packages/NetteToSymfony/src/Route/RouteInfoFactory.php'
            - 'src/PhpParser/Node/Resolver/NameResolver.php'
            - 'src/Rector/MethodBody/NormalToFluentRector.php'

            # copied 3rd party logic
            - 'packages/Php/src/EregToPcreTransformer.php'
            # dev
            - 'packages/Php/src/Rector/FunctionLike/*TypeDeclarationRector.php'
            - 'examples/*'
            - 'packages/Php/src/Rector/If_/IfToSpaceshipRector.php'

        SlevomatCodingStandard\Sniffs\Functions\UnusedParameterSniff.UnusedParameter:
            # enforced by interface
            - '*Command.php'
            - '*NodeVisitor.php'
            - '*CompilerPass.php'
            - 'packages/Php/src/Rector/Unset_/UnsetCastRector.php'
            - 'packages/Php/src/Rector/ConstFetch/BarewordStringRector.php'
            - 'packages/CodeQuality/src/Rector/Foreach_/ForeachToInArrayRector.php'
            - 'packages/Php/src/Rector/MagicConstClass/ClassConstantToSelfClassRector.php'
            - 'utils/phpstan/src/Rector/Type/*TypeExtension.php'
            # array type check
            - 'src/RectorDefinition/RectorDefinition.php'

        Symplify\CodingStandard\Sniffs\ControlStructure\SprintfOverContactSniff:
            # respects inherited pattern for better comparing
            - 'src/PhpParser/Printer/BetterStandardPrinter.php'

        PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\AssignmentInConditionSniff.FoundInWhileCondition: ~

        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.MissingParameterTypeHint:
            # 3rd party parent code
            - 'src/DependencyInjection/Loader/TolerantRectorYamlFileLoader.php'
            - 'src/PhpParser/Printer/BetterStandardPrinter.php'
            - 'tests/AbstractContainerAwareTestCase.php'

        Symplify\CodingStandard\Sniffs\Debug\CommentedOutCodeSniff.Found:
            # notes
            - 'packages/Php/src/Rector/Each/ListEachRector.php'
            - 'packages/DeadCode/src/Rector/ClassMethod/RemoveOverriddenValuesRector.php'

        Symplify\CodingStandard\Sniffs\DependencyInjection\NoClassInstantiationSniff:
            # 3rd party api
            - 'src/PhpParser/Node/Value/ValueResolver.php'

        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff:
        MissingTraversableParameterTypeHintSpecification:
            - 'src/Testing/PHPUnit/AbstractRectorTestCase.php'
