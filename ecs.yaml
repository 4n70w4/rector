services:
    Symplify\CodingStandard\Fixer\Order\MethodOrderByTypeFixer:
        method_order_by_type:
            Rector\Contract\Rector\PhpRectorInterface:
                - 'getDefinition'
                - 'getNodeTypes'
                - 'refactor'

parameters:
    paths:
        - "bin"
        - "src"
        - "packages"
        - "rules"
        - "tests"
        - "utils"
        - "compiler"

    sets:
      - "psr12"
      - "php70"
      - "php71"
      - "symplify"
      - "common"
      - "clean-code"

    exclude_files:
        # tests files
        - '*/Source/*'
        - '*/Fixture/*'
        - '*/Expected/*'
        # generated
        - 'packages/doctrine-annotation-generated/src/ConstantPreservingDocParser.php'
        - 'packages/doctrine-annotation-generated/src/ConstantPreservingAnnotationReader.php'

    skip:
        # rather useless
        PhpCsFixer\Fixer\Import\GlobalNamespaceImportFixer: null
        Symplify\CodingStandard\Fixer\Php\ClassStringToClassConstantFixer: null

        PHP_CodeSniffer\Standards\PSR2\Sniffs\Methods\MethodDeclarationSniff.Underscore: null
        Symplify\CodingStandard\Sniffs\Architecture\DuplicatedClassShortNameSniff: null

        # run manually from time to time - performance demanding + not to bother user with it
        Symplify\CodingStandard\Fixer\Order\PropertyOrderByComplexityFixer: null
        Symplify\CodingStandard\Fixer\Order\PrivateMethodOrderByUseFixer: null

        PhpCsFixer\Fixer\Phpdoc\PhpdocTypesFixer:
            - 'rules/php74/src/Rector/Double/RealToFloatTypeCastRector.php'

        PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\AssignmentInConditionSniff.FoundInWhileCondition: null

        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.MissingParameterTypeHint:
            # 3rd party parent code
            - 'src/DependencyInjection/Loader/TolerantRectorYamlFileLoader.php'
            - 'src/PhpParser/Printer/BetterStandardPrinter.php'
            - 'tests/AbstractContainerAwareTestCase.php'

        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.MissingTraversableReturnTypeHintSpecification:
            # false positive
            - 'src/Testing/PHPUnit/AbstractRectorTestCase.php'

        Symplify\CodingStandard\Sniffs\Debug\CommentedOutCodeSniff.Found:
            # notes
            - 'rules/php72/src/Rector/Each/ListEachRector.php'
            - 'rules/dead-code/src/Rector/ClassMethod/RemoveOverriddenValuesRector.php'
            - 'rules/php-spec-to-phpunit/src/Rector/MethodCall/PhpSpecPromisesToPHPUnitAssertRector.php'
            - 'rules/cakephp-to-symfony/tests/Rector/Class_/CakePHPModelToDoctrineRepositoryRector/CakePHPModelToDoctrineRepositoryRectorTest.php'

        PhpCsFixer\Fixer\PhpUnit\PhpUnitStrictFixer:
            - 'packages/better-php-doc-parser/tests/PhpDocInfo/PhpDocInfo/PhpDocInfoTest.php'
            # intentional "assertEquals()"
            - 'tests/PhpParser/Node/NodeFactoryTest.php'
            - '*TypeResolverTest.php'

        # conflicts with "PhpCsFixer\Fixer\Operator\NotOperatorWithSuccessorSpaceFixer"
        PhpCsFixer\Fixer\Operator\UnaryOperatorSpacesFixer: null

        PhpCsFixer\Fixer\Strict\StrictComparisonFixer:
            # part of the comparison logic
            - 'packages/polyfill/src/ConditionEvaluator.php'

    line_ending: "\n"
